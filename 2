third prog

#include <iostream>
#include <string>
using namespace std;
int main()
{
    int  start = 0, finish = 0, size = 0;
    string a;
    cout << "Enter text: ";
    getline(cin, a);
    int b = a.find_last_of(' ');
    string last = a.substr(++b), word;
    while (start <= a.length()) {
        finish = a.find(' ', start);
        size = finish - start;
        word = a.substr(start, size);
        start = a.find_first_not_of(' ', finish);
        if (word == last)
        {
            // перенос последней буквы в начало слова
        }
        cout <<  word << endl;
        }
    return 0;
}


second prog 

#include <iostream>
#include <string>
#include <algorithm>
#include <cctype>

using namespace std;

int main()
{
    string a;
    cout << "Enter text: ";
    getline(cin, a);
    
    for (int i = 0; i < a.length(); i++)
    {
        //тут должна появиться штука, которая будет отделять слова от букв. 
        //Проверка на количество букв в том числе через while (как вариант).
        //понижайку регистров хз делать не
        //и слова сделать в переменную word, на которую надо все снизу заменить
        if (a.find_first_of(a[i]) == a.find_last_of(a[i])) {
            cout << a[i] << endl;
        }
        else if (a.find_first_of(a[i]) != a.find_last_of(a[i])) {
            cout << "";
        }
        else {
            cout << "";
        }
    }
    return 0;
}




1st prog
#include <iostream>
#include <string>
#include <vector>

using namespace std;

void fsort(vector <string>& numb) {
    for (int i = 0; i < numb.size(); ++i) {
        for (int j = 0; j < numb.size() - i - 1; ++j) {
            if (numb[j] < numb[j + 1])
                swap(numb[j + 1], numb[j]);
        }
    }
}

void SplitString(string s, vector<string>& v) {

  string temp = "";
  for (int i = 0; i < s.length(); ++i) {

    if (s[i] == ' ') {
      v.push_back(temp);
      temp = "";
    }
    else {
      temp.push_back(s[i]);
    }

  }
  v.push_back(temp);

}

int main()
{
  vector<string> strings;
  string in;
  cout << "enter text : \n";
  getline(cin, in);
  SplitString(in, strings);
  fsort(strings);

  int count = 1;
  for (int i = 0 ;i < strings.size() ;i++)
  {
    if(strings[i] == strings[i+1])
    {
      count++;
    }
    else
    {
      cout << strings[i] << ":" << count << " ";
      count = 1;
    }
  }

}



2nd prog



3rd prog

#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;
string last_word(const string& str)
{
    if (str.empty())
    {
        cout << "No string\n";
    }
 
    int i = str.length() - 1;
    while (i >= 0 && str[i] != ' ')
    {
        i--;
    }
    string last_word;
    for (int j = i + 1; j < str.length(); j++)
    {
        last_word += str[j];
    }
    return last_word;
}
 
void SplitString(string s, vector<string>& v) {
 
    string temp = "";
    for (int i = 0; i < s.length(); ++i) {
 
        if (s[i] == ' ') {
            v.push_back(temp);
            temp = "";
        }
        else {
            temp.push_back(s[i]);
        }
 
    }
    v.push_back(temp);
 
}
 
void swapchar(string &a) {
    swap(a.back(), a.front());
}
 
int main() {
    /*
    Напечатать все слова, отличные от последнего слова, предварительно преобразовав каждое из них по следующему правилу:
    перенести последнюю букву в начало слова.*/
 
    string str,lst;
    vector<string> v;
    cout << "enter text : \n";
    getline(cin, str);
    lst = last_word(str);
    SplitString(str, v);
    for (auto i : v) { 
        swapchar(i);
        if (i != lst){
            cout << i << endl;
        }
    }
}
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;
string last_word(const string& str)
{
    if (str.empty())
    {
        cout << "No string\n";
    }
 
    int i = str.length() - 1;
    while (i >= 0 && str[i] != ' ')
    {
        i--;
    }
    string last_word;
    for (int j = i + 1; j < str.length(); j++)
    {
        last_word += str[j];
    }
    return last_word;
}
 
void SplitString(string s, vector<string>& v) {
 
    string temp = "";
    for (int i = 0; i < s.length(); ++i) {
 
        if (s[i] == ' ') {
            v.push_back(temp);
            temp = "";
        }
        else {
            temp.push_back(s[i]);
        }
 
    }
    v.push_back(temp);
 
}
 
void swapchar(string &a) {
    swap(a.back(), a.front());
}
 
int main() {
    /*
    Напечатать все слова, отличные от последнего слова, предварительно преобразовав каждое из них по следующему правилу:
    перенести последнюю букву в начало слова.*/
 
    string str,lst;
    vector<string> v;
    cout << "enter text : \n";
    getline(cin, str);
    lst = last_word(str);
    SplitString(str, v);
    for (auto i : v) { 
        swapchar(i);
        if (i != lst){
            cout << i << endl;
        }
    }
}








4th prog

#include <iostream>
#include <string>
#include <vector>

using namespace std;

void fsort(vector <int>& numb) {
    for (int i = 0; i < numb.size(); ++i) {
        for (int j = 0; j < numb.size() - i - 1; ++j) {
            if (numb[j] < numb[j + 1])
                swap(numb[j + 1], numb[j]);
        }
    }
}
 
int main() {
    int s;
    ifstream file;
    ofstream file2;
    ofstream file3;
    vector <int> arr;
    vector <int> arr2;
    vector <int> arr3;
    file.open("f1.txt");
    file2.open("f2.txt");
    file3.open("f3.txt");
 
    for (file >> s; !file.eof(); file >> s) 
    {
        if (s % 2 == 0) {
            arr2.emplace_back(s);
            fsort(arr2);
        }
        else
        {
            arr3.emplace_back(s);
            fsort(arr3);
        }
    }
 
    for (int i = 0; i < arr2.size(); ++i) {
        file2 << arr2[i] << endl;
    }
    for (int i = 0; i < arr3.size(); ++i) {
        file3 << arr3[i] << endl;
    }
 
}
