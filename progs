second prog
#include <iostream>
#include <string>
#include <vector>

using namespace std;

void fsort(vector <string>& numb) {
    for (int i = 0; i < numb.size(); ++i) {
        for (int j = 0; j < numb.size() - i - 1; ++j) {
            if (numb[j] < numb[j + 1])
                swap(numb[j + 1], numb[j]);
        }
    }
}

void SplitString(string s, vector<string>& v) {

  string temp = "";
  for (int i = 0; i < s.length(); ++i) {

    if (s[i] == ' ') {
      v.push_back(temp);
      temp = "";
    }
    else {
      temp.push_back(s[i]);
    }

  }
  v.push_back(temp);

}

int main()
{
  vector<string> strings;
  string in;
  cout << "enter text : \n";
  getline(cin, in);
  SplitString(in, strings);
  fsort(strings);

  int count = 1;
  for (int i = 0 ;i < strings.size() ;i++)
  {
    if(strings[i] == strings[i+1])
    {
      count++;
    }
    else
    {
      cout << strings[i] << ":" << count << " ";
      count = 1;
    }
  }

}

3rd prog

#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;
string last_word(const string& str)
{
    if (str.empty())
    {
        cout << "No string\n";
    }

    int i = str.length() - 1;
    while (i >= 0 && str[i] != ' ')
    {
        i--;
    }
    string last_word;
    for (int j = i + 1; j < str.length(); j++)
    {
        last_word += str[j];
    }
    return last_word;
}

void SplitString(string s, vector<string>& v) {

    string temp = "";
    for (int i = 0; i < s.length(); ++i) {

        if (s[i] == ' ') {
            v.push_back(temp);
            temp = "";
        }
        else {
            temp.push_back(s[i]);
        }

    }
    v.push_back(temp);

}

void swapchar(string& a) {
    a.insert(0, 1, a.back());
    a.pop_back();
}

void rev_swapchar(string& a) {
    a = a + a[0];
    a.erase(0, 1);
}

int main() {
    /*
    Напечатать все слова, отличные от последнего слова, предварительно преобразовав каждое из них по следующему правилу:
    перенести последнюю букву в начало слова.*/
    cout << "Enter text : \n";
    string str, lst;
    vector<string> v;
    getline(cin, str);
    lst = last_word(str);
    SplitString(str, v);
    v.pop_back();
    for (auto i : v) {
        swapchar(i);
        if (i != lst) {
            rev_swapchar(i);
            cout << "result is : " << i << "\n";
        }
    }
}


4th prog

#include <iostream>
#include <string>
#include <vector>
#include <fstream>
using namespace std;

void fsort(vector <int>& numb) {
    for (int i = 0; i < numb.size(); ++i) {
        for (int j = 0; j < numb.size() - i - 1; ++j) {
            if (numb[j] > numb[j + 1])
                swap(numb[j + 1], numb[j]);
        }
    }
}

int main() {
    int numb;
    cout << "Choose the first if you want to take a ready-made, and the second if you want to create" << endl;
    cin >> numb;

    switch (numb)
    {
    case 1:
    {
        int s;
        ifstream file;
        ofstream file2;
        ofstream file3;
        vector <int> arr;
        vector <int> arr2;
        vector <int> arr3;
        file.open("f1.txt");
        file2.open("f2.txt");
        file3.open("f3.txt");
        for (file >> s; !file.eof(); file >> s)
        {
            if (s % 2 == 0) {
                arr2.emplace_back(s);
            }
            else
            {
                arr3.emplace_back(s);
            }
        }

        fsort(arr2);
        fsort(arr3);

        for (int i : arr2)
        {
            file2 << i << endl;
        }
        for (int i : arr3)
        {
            file3 << i << endl;
        }
        file.close();
        file2.close();
        file3.close();

    }
    case 2:
    {
        string name;
        ifstream file;
        ofstream file2;
        ofstream file3;
        int s, size, num;
        vector <int> arr;
        vector <int> arr2;
        vector <int> arr3;
        cout << "enter file name" << endl;
        cin >> name;
        ofstream ost(name + ".txt");
        file.open(name + ".txt");
        file2.open("f2.txt");
        file3.open("f3.txt");

        cout << "Enter the set of numbers to be entered" << endl;

        cin >> size;

        for (int i = 0; i < size; i++)
        {
            cin >> num;
            arr.emplace_back(num);
        }

        for (file >> s; !file.eof(); file >> s)
        {
            if (s % 2 == 0) {
                arr2.emplace_back(s);
            }
            else
            {
                arr3.emplace_back(s);
            }
        }

        fsort(arr2);
        fsort(arr3);

        for (int i : arr2)
        {
            file2 << i << endl;
        }
        for (int i : arr3)
        {
            file3 << i << endl;
        }
        file.close();
        file2.close();
        file3.close();
       }
    }
    return 0;
}


fifth prog

void fsort(vector <string>& numb) {
    for (int i = 0; i < numb.size(); ++i) {
        for (int j = 0; j < numb.size() - i - 1; ++j) {
            if (numb[j] < numb[j + 1])
                swap(numb[j + 1], numb[j]);
        }
    }
}

void emplace_world(vector <string>& mass, vector <string>& v)
{
    int count = 1;
    for (int i = 0; i < mass.size() - 1; i++)
    {
        if (mass[i] == mass[i + 1])
        {
            count++;
        }
        else
        {
            if(count > 1)
            {
	            for (int j = 0; j < count; j++)
	            {
                    v.push_back(mass[i]);
	            }
            }
            count = 1;
        }
    }
}

int main()
{
	ifstream file;
	ofstream file2;
	string s;
	vector <string> arr;
	vector <string> arr1;
	file.open("f1.txt");
	file2.open("f2.txt");

    for (file >> s; !file.eof(); file >> s)
    {
	    arr.emplace_back(s);
    }

    fsort(arr);
    emplace_world(arr, arr1);

    for (auto i : arr1)
    {
        file2 << i << endl;
    }
}
